import logging
from aiogram import Bot, Dispatcher, executor, types
import inline_keyboard
import messages
from settings import API_TOKEN, city_list, zodiak, banks



# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token=API_TOKEN)

# –î–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher(bot)


# –∑–∞–ø—É—Å–∫–∞–µ–º –º–µ–Ω—é –±–æ—Ç–∞
@dp.message_handler(commands=['start'])
async def start_mybot(message: types.Message):
    logging.info(message)
    await message.answer(text=messages.start_bot(),
                         reply_markup=inline_keyboard.menu())

# —Ö–µ–Ω–¥–ª–µ—Ä –ø–æ–≥–æ–¥—ã
@dp.message_handler(text='–ü–æ–≥–æ–¥–∞ üå§')
async def weather_menu(callback: types.CallbackQuery):
    logging.info(callback)
    await callback.answer(text=messages.select_city(),
                         reply_markup=inline_keyboard.btn_all_city())

# –≤—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞
@dp.message_handler(text=city_list)
async def weather_select_city(callback: types.CallbackQuery):
    logging.info(callback)
    await callback.answer(text=messages.weather_get_city(callback.text))

# —Ö–µ–Ω–¥–ª–µ—Ä –≥–æ—Ä–æ—Å–∫–æ–ø–∞
@dp.message_handler(text='–ì–æ—Ä–æ—Å–∫–æ–ø ‚ôìÔ∏è')
async def horoscope_menu(callback: types.CallbackQuery):
    logging.info(callback)
    await callback.answer(text=messages.zodiak_select(),
                         reply_markup=inline_keyboard.btn_all_zodiak())

# –≤—ã–±–æ—Ä –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞
@dp.message_handler(text=zodiak)
async def horoscope_select_zodiak(callback: types.CallbackQuery):
    logging.info(callback)
    await callback.answer(text=messages.select_data(),
                         reply_markup=inline_keyboard.select_date_zodiak(callback.text))

# –≤—ã–±–æ—Ä –¥–∞—Ç—ã –≥–æ—Ä–æ—Å–∫–æ–ø–∞
@dp.callback_query_handler(inline_keyboard.zodiak_callback.filter())
async def horoscope_select_date(callback: types.CallbackQuery, callback_data: dict):
    logging.info(callback_data)
    zodiak = callback_data['name']
    date = callback_data['select_date']
    await bot.send_message(chat_id=callback.message.chat.id, text=messages.horoscope(zodiak, date),
                         reply_markup=inline_keyboard.menu())

# —Ö–µ–Ω–¥–ª–µ—Ä –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç
@dp.message_handler(text='–ö—É—Ä—Å –≤–∞–ª—é—Ç üè¶')
async def horoscope_menu(callback: types.CallbackQuery):
    logging.info(callback)
    await callback.answer(text=messages.bank_select(),
                         reply_markup=inline_keyboard.btn_all_bank())

# –≤—ã–±–æ—Ä –±–∞–Ω–∫–∞
@dp.message_handler(text=banks)
async def horoscope_select_zodiak(callback: types.CallbackQuery):
    logging.info(callback)
    await callback.answer(text=messages.bank_data_request(callback.text))

# —Ö–µ–Ω–¥–ª–µ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∞–≥—Ä–µ—Å—Å–∏–∏ —Å minfin
@dp.message_handler(text='–ê–≥—Ä–µ—Å—Å–∏—è –ø—Ä–æ—Ç–∏–≤ –£–∫—Ä–∞–∏–Ω—ã')
async def horoscope_menu(callback: types.CallbackQuery):
    logging.info(callback)
    await callback.answer(text=messages.war_info(),
                         reply_markup=inline_keyboard.menu())

# —Ö–µ–Ω–¥–ª–µ—Ä —Ç–æ–ø–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –∑–∞ —Å—É—Ç–∫–∏
@dp.message_handler(text='–¢–æ–ø –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç üí∞')
async def horoscope_menu(callback: types.CallbackQuery):
    logging.info(callback)
    await callback.answer(text=messages.cripta(),
                         reply_markup=inline_keyboard.menu())



if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
